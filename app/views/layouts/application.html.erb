<!DOCTYPE html>
<html>
<head>
  <title>ExploreUs</title>
  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
</head>
<body>
  <nav class="navbar navbar-default">
    <div class="container-fluid">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="#">
          <h4 class="app-name">ExploreUSA</h4>
        </a>
      </div>
      <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
        <ul class="nav navbar-nav navbar-right">
          <li><a href="/users/sign_in">Log In</a></li>
          <li><a href="/users/sign_up">Sign Up</a></li>
        </ul>
      </div>
    </div>
  </nav>

  <script type="text/javascript">
    var myCanvas = document.createElement('canvas')
    document.body.append(myCanvas)
    myCanvas.style.background = '#46b8da'
    myCanvas.width = 1250
    myCanvas.height = 40
    ctx = myCanvas.getContext('2d')

    function draw(){
      ctx.clearRect(0,0, myCanvas.width, myCanvas.height)
      particles.forEach(function(p){
        p.update()
        p.render()
      })
      requestAnimationFrame(draw)
    }

    class Particle{
      constructor(opts){
        this.x = opts.x
        this.y = opts.y
        this.vx = opts.vx
        this.vy = opts.vy
      }
      render(){
        ctx.fillStyle = 'white'
        ctx.fillRect(this.x, this.y, 6, 6)
      }
      update(){
        this.x = this.x + this.vx
        this.y = this.y + this.vy
      }
    }

    class Utils {
      constructor() {}
      randomInt(opts){
        return Math.floor(opts.from + Math.random()*(opts.to - opts.from))
      }
      randomFloat(opts){
        return opts.from + Math.random()*(opts.to - opts.from)
      }
    }

    u = new Utils()

    myCanvas.addEventListener('mouseover', function(evt) {
      for (var i = 0; i < 100; i++) {
        var dot = new Particle({
          x: evt.layerX,
          y: evt.layerY,
          vx: u.randomFloat({from: -2, to: 2}),
          vy: u.randomFloat({from: -2, to: 2})
        })
        particles.push(dot)
      }
    })
    var firstParticle = new Particle({
      x: 1250,
      y: 100,
      vx: u.randomFloat({from: -2, to: 2}),
      vy: u.randomFloat({from: -2, to: 2})
    })
    var particles = [firstParticle]
    draw()
  </script>
<%= yield %>



  </body>
</html>
